import { addKeyword } from '@builderbot/bot';
import { MongoAdapter as Database } from '@builderbot/database-mongo';
import { BaileysProvider as Provider } from '@builderbot/provider-baileys';

const flowWorkshopServices = addKeyword<Provider, Database>('/FLOWWORKSHOPSERVICES')
    .addAnswer('ðŸš— Â¡Estamos aquÃ­ para cuidar de tu vehÃ­culo! Ofrecemos una variedad de servicios para mantener tu auto en excelente estado:')
    .addAnswer(
        `ðŸ”§ Servicios que ofrecemos:
        - Frenos
        - Cambio de aceite
        - SuspensiÃ³n
        - RevisiÃ³n de motor
        - LubricaciÃ³n
        - AfinaciÃ³n
        - Climas
        - Â¡Y mucho mÃ¡s!`,
        { capture: false }
    )
    .addAnswer(
        'Â¿Hay algo mÃ¡s en lo que te pueda ayudar? ðŸ˜Š',
        { capture: true },
        async (ctx, { fallBack, flowDynamic }) => {
            const response = ctx.body.trim().toLowerCase();
            
            if (response.includes('sÃ­') || response.includes('si')) {
                // Redirigir al flujo correspondiente segÃºn la respuesta del usuario
                await flowDynamic('Â¡Perfecto! Â¿En quÃ© mÃ¡s puedo asistirte hoy?');
            } else if (response.includes('no')) {
                await flowDynamic('Gracias por tu consulta. Â¡Que tengas un excelente dÃ­a! ðŸ˜Š');
            } else {
                return fallBack('Lo siento, no entendÃ­ tu respuesta. Â¿PodrÃ­as decirme "sÃ­" si necesitas mÃ¡s informaciÃ³n o "no" si eso es todo?');
            }
        }
    );

export default flowWorkshopServices;
